# -*- coding: utf-8 -*-
"""fromXMLtoDataFrame.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xUDhXB9IJ9KG-WBnK3u1ZN7qcGTJDhjp
"""

# Commented out IPython magic to ensure Python compatibility.
# GOOGLE DRIVE MOUNT
from google.colab import drive
drive.mount('/content/drive')

# %cd

# NECESSARY IMPORTS
from os import listdir
import pandas as pd
import xml.etree.ElementTree as ET

# Method used to convert the XML files into a pandas dataframe. 
# INPUT: The path of the dataset, 
# OUTPUT: The dataset as a dataframe

def fromXMLtoDataFrame(xml_path):

  # Check xml_path
  if( not( isinstance(xml_path,str) ) ):
    print("Make sure that your path is of type String")
    return

  # Get the file names
  try:
    files = listdir(xml_path+"/")
  except OSError as e:
      print(f"Make sure that your path exists")
      return
  
  data = []

  # For each file
  for file in files:

    # Parse the XML
    tree = ET.parse(xml_path+"/"+file)
    root = tree.getroot()

    # For each sentence in the XML 
    for sentence in root.iter('sentence'):

      # Save the data
      data.append({'sentence': sentence.text ,'ann_1':sentence.get('ironic_ann1'), 'ann_2':sentence.get('ironic_ann2'), 'ann_3':sentence.get('ironic_ann3'), 'is_ironic':sentence.get('is_ironic')})
      
  # Convert the data into dataframe
  df = pd.DataFrame(data)

  return df

# Example of a call the to converter
df = fromXMLtoDataFrame("./dataset")
display(df)

save_path_iro = "./reviews_test/ironic/"
save_path_notiro = "./reviews_test/notironic/"

for index, row in df.iterrows():
  if row['is_ironic'] == 'no':
    with open(save_path_notiro+str(index)+".txt", 'w') as archivo:
      archivo.write(row['sentence'])
  else:
    with open(save_path_iro+str(index)+".txt", 'w') as archivo:
      archivo.write(row['sentence'])